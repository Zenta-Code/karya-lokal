generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  SELLER
}

enum OrderStatus {
  PENDING
  SHIPPED
  DELIVERED
  CANCELED
}

model User {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  email        String?    @unique
  password     String?
  authStrategy String?
  image        String?
  phone        String?
  name         String?
  role         UserRole   @default(USER)
  orders       Order[]
  cart         CartItem[]
  reviews      Review[]
  products     Product[]
  address      Address?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  Discount     Discount[]
}

model Address {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  address1 String
  address2 String?
  city     String
  state    String
  zip      String
  country  String
  user     User    @relation(fields: [userId], references: [id])
  userId   String  @unique @db.ObjectId
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  stock       Int
  categoryId  String           @db.ObjectId
  category    Category         @relation(fields: [categoryId], references: [id])
  images      ProductImage[]
  variants    ProductVariant[]
  cartItems   CartItem[]
  orderItems  OrderItem[]
  reviews     Review[]
  User        User?            @relation(fields: [userId], references: [id])
  userId      String?          @db.ObjectId
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  Discount    Discount?        @relation(fields: [discountId], references: [id])
  discountId  String?          @db.ObjectId
}

model ProductVariant {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  size      String
  color     String
  price     Float
  stock     Int
  productId String         @db.ObjectId
  product   Product        @relation(fields: [productId], references: [id])
  images    ProductImage[]
}

model ProductImage {
  id               String          @id @default(auto()) @map("_id") @db.ObjectId
  url              String          @default("https://www.pulsecarshalton.co.uk/wp-content/uploads/2016/08/jk-placeholder-image.jpg")
  name             String?         @default("jk-placeholder-image.jpg")
  productId        String?         @db.ObjectId
  product          Product?        @relation(fields: [productId], references: [id])
  ProductVariant   ProductVariant? @relation(fields: [productVariantId], references: [id])
  productVariantId String?         @db.ObjectId
}

model CartItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  userId    String  @db.ObjectId
  user      User    @relation(fields: [userId], references: [id])
  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
}

model Order {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  total     Float
  status    OrderStatus @default(PENDING)
  userId    String      @db.ObjectId
  user      User        @relation(fields: [userId], references: [id])
  items     OrderItem[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model OrderItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  price     Float
  orderId   String  @db.ObjectId
  order     Order   @relation(fields: [orderId], references: [id])
  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
}

model Review {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  rating    Int
  comment   String?
  userId    String  @db.ObjectId
  user      User    @relation(fields: [userId], references: [id])
  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
}

model Discount {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  percent     Int
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  startDate   DateTime
  endDate     DateTime
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
