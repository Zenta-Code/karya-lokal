generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

// User Model
model User {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  email    String     @unique
  password String
  name     String?
  role     UserRole   @default(USER)
  orders   Order[]
  cart     CartItem[]
}

// Product Category Model
model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  products Product[]
}

// Product Model
model Product {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  stock       Int
  imageUrl    String?
  categoryId  String      @db.ObjectId
  category    Category    @relation(fields: [categoryId], references: [id])
  cartItems   CartItem[]
  orderItems  OrderItem[]
}

// Cart Item Model
model CartItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  userId    String  @db.ObjectId
  user      User    @relation(fields: [userId], references: [id])
  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
}

// Order Model
model Order {
  id     String      @id @default(auto()) @map("_id") @db.ObjectId
  total  Float
  userId String      @db.ObjectId
  user   User        @relation(fields: [userId], references: [id])
  items  OrderItem[]
}

// Order Item Model
model OrderItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  price     Float
  orderId   String  @db.ObjectId
  order     Order   @relation(fields: [orderId], references: [id])
  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
}
